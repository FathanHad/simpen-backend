# default:
#   tags:
#     - apap

# workflow:
#   rules:
#     - if: $CI_COMMIT_TAG
#       when: never

before_script:
  - docker info
  - javac -version

variables:
  IMAGE_OPENJDK_GRADLE: gradle:7.3.3-jdk17-alpine
  IMAGE_DOCKER_DIND: docker:20.10.16

stages:
  - build
  - test
  - build-image
  - publish-image
  - deploy

build:
  image: $IMAGE_OPENJDK_GRADLE
  stage: build
  script:
    - echo "Compiling the code..."
    - cd $CI_PROJECT_DIR/simpen-backend
    - sh gradlew clean assemble
    - |
      echo "Creating .env file inside simpen-backend folder..."
      echo "DATABASE_URL_DEV=$DATABASE_URL_DEV" >> .env
      echo "DATABASE_URL_PROD=$DATABASE_URL_PROD" >> .env
      echo "PROD_PORT=$PROD_PORT" >> .env
      echo "PROD_USERNAME=$PROD_USERNAME" >> .env
      echo "PROD_PASSWORD=$PROD_PASSWORD" >> .env
      echo "DEV_USERNAME=$DEV_USERNAME" >> .env
      echo "DEV_PASSWORD=$DEV_PASSWORD" >> .env
    - cat .env
  artifacts:
    paths:
      - simpen-backend/build/libs/simpen-backend-0.0.1-SNAPSHOT.jar
      - simpen-backend/.env

build-image:
  stage: build-image
  script:
    - echo "Building Docker Image..."
    - docker build -t $REGISTRY_USERNAME/simpen-backend:$CI_COMMIT_SHORT_SHA .
    - docker build -t $REGISTRY_USERNAME/simpen-backend:latest .

publish-image:
  stage: publish-image
  script:
    - echo "Publishing Docker Image..."
    - echo $REGISTRY_PASSWORD | docker login --username $REGISTRY_USERNAME --password-stdin
    - docker push $REGISTRY_USERNAME/simpen-backend:$CI_COMMIT_SHORT_SHA
    - docker push $REGISTRY_USERNAME/simpen-backend:latest

deploy:
  stage: deploy
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

  script:
    - echo "Deploy to server..."
    - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" "mkdir -p ~/a02-simp/simpen-backend/"
    - rsync -rahv $CI_PROJECT_DIR/simpen-backend/.env "${DEPLOY_USERNAME}@${DEPLOY_SERVER}:~/a02-simp/simpen-backend/"
    - rsync -rahv $CI_PROJECT_DIR/docker-compose-deploy.yml "${DEPLOY_USERNAME}@${DEPLOY_SERVER}:~/a02-simp/"
    - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" "cd ~/a02-simp/ && docker-compose -f docker-compose-deploy.yml down && docker-compose -f docker-compose-deploy.yml pull && docker-compose -f docker-compose-deploy.yml up -d"
    - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" "docker exec a02-simp_db_1 psql -U postgres -c \"CREATE DATABASE simpen;\""
  only:
    - main
